---
import type { CollectionEntry } from 'astro:content';
import ContentCard from './ContentCard.astro';

interface Props {
  topic: CollectionEntry<'topics'>;
  recentPosts: CollectionEntry<'posts'>[];
}

const { topic, recentPosts } = Astro.props;

// Get the 3 most recent posts for this topic
const filteredPosts = recentPosts
  .filter(post => post.data.parent_topic?.slug === topic.slug)
  .sort((a, b) => {
    const dateA = new Date(b.data.pubDate || b.data.updatedDate || 0).getTime();
    const dateB = new Date(a.data.pubDate || a.data.updatedDate || 0).getTime();
    return dateA - dateB;
  })
  .slice(0, 3);

// Use short title if available, otherwise use full title
const displayTitle = topic.data.title_short || topic.data.title;
---

<section class="py-16">
  <div class="container mx-auto px-4">
    <h2 class="text-3xl font-bold mb-4">{displayTitle}</h2>
    <p class="text-lg text-base-content/70 max-w-3xl mb-8">
      {topic.data.description}
    </p>

    {filteredPosts.length > 0 ? (
      <div class="grid grid-cols-1 lg:grid-cols-3 gap-10 mb-8">
        {filteredPosts.map(post => <ContentCard content={post} />)}
      </div>
    ) : (
      <p class="text-base-content/50 italic mb-8">No posts available for this topic yet.</p>
    )}

    <a href={`/topics/${topic.slug}`} class="btn btn-primary">
      Explore {displayTitle}
    </a>
  </div>
</section>
