---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import { DEFAULT_IMAGES } from '../../utils/images';

export async function getStaticPaths() {
  const posts = await getCollection('posts');
  return posts.map(post => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await post.render();

// Helper function to get optimized Unsplash image URL
const getOptimizedImageUrl = (url: string | undefined, width: number) => {
  if (!url) return '';
  if (typeof url !== 'string') return '';
  if (url.includes('unsplash.com')) {
    const baseUrl = url.split('?')[0];
    return `${baseUrl}?q=80&w=${width}&fm=jpg&fit=crop`;
  }
  return url;
};
---

<Layout title={post.data.title} description={post.data.description}>
  <article class="prose prose-lg lg:prose-xl mx-auto px-4 py-8">
    <div class="not-prose mb-8">
      {post.data.image ? (
        <img
          src={getOptimizedImageUrl(post.data.image.src, 1200)}
          alt={post.data.image.alt}
          width={post.data.image.width}
          height={post.data.image.height}
          class="w-full aspect-video object-cover rounded-xl shadow-lg"
        />
      ) : (
        <img
          src={getOptimizedImageUrl(DEFAULT_IMAGES.post.src, 1200)}
          alt={`${post.data.title} featured image`}
          width={DEFAULT_IMAGES.post.width}
          height={DEFAULT_IMAGES.post.height}
          class="w-full aspect-video object-cover rounded-xl shadow-lg"
        />
      )}
    </div>

    <header class="text-center mb-12">
      <div class="flex items-center justify-center gap-4 mb-4">
        <span class="badge badge-primary">{post.data.category}</span>
        {post.data.featured && <span class="badge">Featured</span>}
      </div>
      <h1 class="mb-4">{post.data.title}</h1>
      <p class="text-xl text-base-content/80 mb-6">{post.data.description}</p>
      <div class="flex items-center justify-center gap-4">
        <div class="flex items-center gap-2">
          <img
            src={getOptimizedImageUrl(post.data.authorImage || DEFAULT_IMAGES.profile.src, 100)}
            alt={post.data.author || 'Author'}
            width="40"
            height="40"
            class="rounded-full"
          />
          <span class="text-base-content/80">{post.data.author || 'Anonymous'}</span>
        </div>
        <span class="text-base-content/60">â€¢</span>
        <time class="text-base-content/80" datetime={post.data.date}>
          {new Date(post.data.date).toLocaleDateString('en-US', {
            year: 'numeric',
            month: 'long',
            day: 'numeric',
          })}
        </time>
      </div>
    </header>

    <Content />
  </article>
</Layout>
