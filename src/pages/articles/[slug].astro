---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import { DEFAULT_IMAGES, getOptimizedImageUrl } from '../../utils/images';
import TableOfContents from '../../components/TableOfContents.astro';
import Breadcrumb from '../../components/Breadcrumb.astro';
import CTAAlert from '../../components/CTAAlert.astro';
import SidebarCTA from '../../components/SidebarCTA.astro';
import FAQSection from '../../components/FAQSection.astro';

export async function getStaticPaths() {
  const articles = await getCollection('articles');
  return articles.map(article => ({
    params: { slug: article.slug },
    props: { article },
  }));
}

const { article } = Astro.props;
const { Content, headings } = await article.render();

// Build breadcrumb items
const breadcrumbItems = [
  ...(article.data.parent_topic 
    ? [{ 
        label: article.data.parent_topic.title, 
        href: `/topics/${article.data.parent_topic.slug}` 
      }]
    : []
  ),
  { label: article.data.title, href: `/articles/${article.slug}` }
];
---

<Layout title={article.data.title} description={article.data.description}>
  <article class="max-w-7xl mx-auto px-4 pb-20">
    <Breadcrumb 
      items={breadcrumbItems}
      className="my-4"
    />
    
    <div class="relative h-[50vh] min-h-[400px] max-h-[600px] mb-12 rounded-2xl overflow-hidden shadow-lg">
      {/* Background Image */}
      <div 
        class="absolute inset-0 bg-cover bg-center"
        style={`background-image: url(${getOptimizedImageUrl(article.data.image?.src || DEFAULT_IMAGES.article.src, 1600)})`}
      >
        {/* Gradient Overlay */}
        <div class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/40 to-black/20"></div>
      </div>

      {/* Content */}
      <div class="relative h-full flex flex-col items-center justify-center px-4 py-12 max-w-4xl mx-auto text-center">
        <div class="flex items-center justify-center gap-4 mb-8">
          <span class="badge badge-primary">{article.data.category}</span>
          {article.data.featured && <span class="badge">Featured</span>}
        </div>
        <h1 class="text-4xl lg:text-5xl font-bold mb-8 text-white">{article.data.title}</h1>
        <p class="text-xl text-white/90 max-w-2xl mx-auto">{article.data.description}</p>
      </div>
    </div>

    <div class="grid grid-cols-1 lg:grid-cols-[250px_1fr] gap-12">
      <aside class="hidden lg:block">
        <div class="sticky top-4 flex flex-col gap-12">
          <TableOfContents headings={headings} />
          <SidebarCTA ctaId="post_content" />
        </div>
      </aside>
      <div class="prose prose-lg lg:prose-xl max-w-none">
        <Content />
        <CTAAlert
          ctaId="post_content"
          className="not-prose my-20"
        />
        {article.data.faq && <FAQSection faqs={article.data.faq} />}
      </div>
    </div>
  </article>
</Layout>

<style>
  /* Ensure headings have smooth scroll behavior */
  html {
    scroll-behavior: smooth;
    scroll-padding-top: 2rem;
  }
</style>
