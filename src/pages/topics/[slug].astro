---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import { DEFAULT_IMAGES, getOptimizedImageUrl } from '../../utils/images';
import ContentCard from '../../components/ContentCard.astro';

export async function getStaticPaths() {
  const topics = await getCollection('topics');
  return topics.map(topic => ({
    params: { slug: topic.slug },
    props: { topic },
  }));
}

const { topic } = Astro.props;
const { Content } = await topic.render();

// Get related posts
const posts = await getCollection('posts', (post) => {
  return post.data.topics?.includes(topic.data.title);
});

// Get related articles
const articles = await getCollection("articles", (article) => 
  !article.data.draft && topic.data.links.articles.includes(article.slug)
);

---

<Layout title={topic.data.title} description={topic.data.description}>
  <article class="prose prose-lg lg:prose-xl mx-auto px-4 py-8">
    <div class="not-prose mb-8">
      <img
        src={getOptimizedImageUrl(topic.data.topicImage?.src || DEFAULT_IMAGES.post.src, 1200)}
        alt={topic.data.topicImage?.alt || `${topic.data.title} featured image`}
        width={topic.data.topicImage?.width || DEFAULT_IMAGES.post.width}
        height={topic.data.topicImage?.height || DEFAULT_IMAGES.post.height}
        class="w-full aspect-video object-cover rounded-xl shadow-lg"
      />
    </div>

    <header class="text-center mb-12">
      <h1 class="mb-4">{topic.data.title}</h1>
      <p class="text-xl text-base-content/80">{topic.data.description}</p>
    </header>

    <Content />

    {topic.data.sections && (
      <div class="max-w-4xl w-full mb-12">
        {topic.data.sections.map((section) => (
          <div class="mb-8">
            <h2 class="text-2xl font-bold mb-4">{section.title}</h2>
            <div class="prose" set:html={section.content} />
          </div>
        ))}
      </div>
    )}

    {posts.length > 0 && (
      <section class="not-prose mt-16">
        <h2 class="text-3xl font-bold text-center mb-8">Related Posts</h2>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {posts.map(post => (
            <ContentCard content={post} />
          ))}
        </div>
      </section>
    )}

    {articles.length > 0 && (
      <section class="not-prose mt-16">
        <h2 class="text-3xl font-bold text-center mb-8">Related Articles</h2>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {articles.map(article => (
            <ContentCard content={article} />
          ))}
        </div>
      </section>
    )}
  </article>
</Layout>
