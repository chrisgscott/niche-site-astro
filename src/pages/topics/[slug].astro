---
import { getCollection, type CollectionEntry } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import { Image } from "astro:assets";

export const getStaticPaths = async () => {
  const topics = await getCollection("topics");
  const path = topics.map((topic) => {
    return {
      params: {
        slug: topic.slug,
      },
      props: {
        topic,
      },
    };
  });
  return path;
};

type Props = {
  topic: CollectionEntry<"topics">;
};

const { topic } = Astro.props;
const { Content } = await topic.render();

// Get related posts and articles
const posts = await getCollection("posts", (post) => 
  !post.data.draft && topic.data.links.posts.includes(post.slug)
);
const articles = await getCollection("articles", (article) => 
  !article.data.draft && topic.data.links.articles.includes(article.slug)
);
---

<Layout title={topic.data.title} description={topic.data.description}>
  <article class="w-full flex flex-col items-center">
    <header class="max-w-4xl mt-5 w-full">
      {
        topic.data.topicImage && (
          <img
            src={topic.data.topicImage}
            alt={topic.data.title}
            class="w-full h-[400px] object-cover rounded-lg mb-8"
          />
        )
      }
      <h1 class="md:text-5xl text-3xl font-extrabold mb-4">
        {topic.data.title}
      </h1>
      <p class="text-xl text-gray-600 mb-8">{topic.data.description}</p>
    </header>

    {/* Topic Content */}
    <div class="prose prose-lg max-w-4xl mb-12">
      <Content />
    </div>

    {/* Topic Sections */}
    {topic.data.sections && (
      <div class="max-w-4xl w-full mb-12">
        {topic.data.sections.map((section) => (
          <div class="mb-8">
            <h2 class="text-2xl font-bold mb-4">{section.title}</h2>
            <div class="prose" set:html={section.content} />
          </div>
        ))}
      </div>
    )}

    {/* Related Posts */}
    {posts.length > 0 && (
      <div class="max-w-4xl w-full mb-12">
        <h2 class="text-3xl font-bold mb-6">Related Posts</h2>
        <div class="grid md:grid-cols-2 gap-6">
          {posts.map((post) => (
            <a href={`/posts/${post.slug}`} class="card bg-base-100 shadow-xl">
              {post.data.postImage && (
                <figure>
                  <img
                    src={post.data.postImage}
                    alt={post.data.title}
                    class="h-48 w-full object-cover"
                  />
                </figure>
              )}
              <div class="card-body">
                <h3 class="card-title">{post.data.title}</h3>
                <p>{post.data.description}</p>
                <div class="card-actions justify-end">
                  <div class="badge badge-outline">{post.data.category}</div>
                </div>
              </div>
            </a>
          ))}
        </div>
      </div>
    )}

    {/* Related Articles */}
    {articles.length > 0 && (
      <div class="max-w-4xl w-full">
        <h2 class="text-3xl font-bold mb-6">Related Articles</h2>
        <div class="grid md:grid-cols-2 gap-6">
          {articles.map((article) => (
            <a href={`/articles/${article.slug}`} class="card bg-base-100 shadow-xl">
              {article.data.articleImage && (
                <figure>
                  <img
                    src={article.data.articleImage}
                    alt={article.data.title}
                    class="h-48 w-full object-cover"
                  />
                </figure>
              )}
              <div class="card-body">
                <h3 class="card-title">{article.data.title}</h3>
                <p>{article.data.description}</p>
              </div>
            </a>
          ))}
        </div>
      </div>
    )}
  </article>
</Layout>
